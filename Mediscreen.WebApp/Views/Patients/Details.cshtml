@using Mediscreen.Shared.Entities;
@model Mediscreen.WebApp.Models.PatientViewModel

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.GivenName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.GivenName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.FamillyName)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.FamillyName)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.DateOfBirth)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.DateOfBirth)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Sex)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Sex)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.HomeAddress)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.HomeAddress)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.PhoneNumber)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.PhoneNumber)
        </dd>
    </dl>
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assessment!.RiskLevel)
        </dt>
        @if (Model != null && Model.Assessment != null)
        {
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.Assessment!.RiskLevel)
            </dd>

            <dt class="col-sm-2">
                Triggers
            </dt>

            <dd class="col-sm-10">
                @foreach (var item in Model.Assessment!.TriggersDetected)
                {
                    <div>
                        <span>@($"x{item.Amount}") @item.TriggerDetected</span>
                    </div>
                }
            </dd>
        }
        else
        {
            <dd class="col-sm-10">There was a problem while assessing risk level. Please, try again later.</dd>
        }
    </dl>
    <hr />
    <h2>Notes</h2>
    @await Html.PartialAsync("/Views/Shared/_NoteFormPartial.cshtml", new NoteViewModel() { PatientId = Model!.Id! } )
    @if (Model.Notes.Count > 0)
    {
        <table class="table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Notes / Recommendations</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Notes!)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreationDate)
                        </td>
                        <td>
                            <pre>@Html.DisplayFor(modelItem => item.NotesRecommendations)</pre>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    } else
    {
        <p class="m-auto text-center my-3">There are no notes available for this patient.</p>
    }
    <hr/>
</div>
<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
